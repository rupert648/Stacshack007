{"version":3,"sources":["markers.js","index.js"],"names":["src_markers","id","city","color","coordinates","value","markerTooltipRenderer","marker","concat","options","App","randomMarkers","defaultMarkers","map","Object","objectSpread","Math","floor","random","_useState","useState","_useState2","slicedToArray","markers","setMarkers","_useState3","_useState4","event","setEvent","_useState5","_useState6","details","setDetails","react_default","a","createElement","style","background","position","fontSize","bottom","right","padding","type","JSON","stringify","pointerEventPosition","onClick","disabled","length","toConsumableArray","slice","index_module","height","width","onClickMarker","markerObject","markerObjectID","uuid","x","clientX","y","clientY","onDefocus","previousFocus","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uMAAeA,eAAA,CACX,CACEC,GAAI,EACJC,KAAM,YACNC,MAAO,MACPC,YAAa,CAAC,OAAQ,UACtBC,MAAO,IAET,CACEJ,GAAI,EACJC,KAAM,WACNC,MAAO,OACPC,YAAa,CAAC,UAAW,WACzBC,MAAO,IAET,CACEJ,GAAI,EACJC,KAAM,gBACNC,MAAO,SACPC,YAAa,CAAC,WAAY,YAC1BC,MAAO,IAET,CACEJ,GAAI,EACJC,KAAM,UACNC,MAAO,OACPC,YAAa,CAAC,QAAS,UACvBC,MAAO,GAET,CACEJ,GAAI,EACJC,KAAM,SACNC,MAAO,QACPC,YAAa,CAAC,QAAS,OACvBC,MAAO,MCtBb,SAASC,EAAsBC,GAC7B,eAAAC,OAAgBD,EAAOL,KAAvB,aAAAM,OAAuCD,EAAOF,MAA9C,KAGF,IAAMI,EAAU,CACdH,yBAGF,SAASI,IACP,IAAMC,EAAgBC,EAAeC,IAAI,SAACN,GAAD,OAAAO,OAAAC,EAAA,EAAAD,CAAA,GACpCP,EADoC,CAEvCF,MAAOW,KAAKC,MAAsB,IAAhBD,KAAKE,cAHZC,EAKiBC,mBAAS,IAL1BC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAK,EAAA,GAKNI,EALMF,EAAA,GAKGG,EALHH,EAAA,GAAAI,EAMaL,mBAAS,MANtBM,EAAAZ,OAAAQ,EAAA,EAAAR,CAAAW,EAAA,GAMNE,EANMD,EAAA,GAMCE,EANDF,EAAA,GAAAG,EAOiBT,mBAAS,MAP1BU,EAAAhB,OAAAQ,EAAA,EAAAR,CAAAe,EAAA,GAONE,EAPMD,EAAA,GAOGE,EAPHF,EAAA,GAyBb,OACEG,EAAAC,EAAAC,cAAA,WACGJ,GACCE,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLC,WAAY,QACZC,SAAU,WACVC,SAAU,GACVC,OAAQ,EACRC,MAAO,EACPC,QAAS,KAGXT,EAAAC,EAAAC,cAAA,SAAIJ,GACJE,EAAAC,EAAAC,cAAA,wBACeR,EAAMgB,KADrB,cAEGC,KAAKC,UAAUlB,EAAMmB,sBAFxB,MAMJb,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEM,QAAS,KACrBT,EAAAC,EAAAC,cAAA,UAAQY,QAAS,kBAAMvB,EAAWb,KAAlC,qBAGAsB,EAAAC,EAAAC,cAAA,UAAQa,SAA6B,IAAnBzB,EAAQ0B,OAAcF,QAAS,kBAAMvB,EAAW,MAAlE,iBAGAS,EAAAC,EAAAC,cAAA,UACEa,SAAUzB,EAAQ0B,SAAWtC,EAAcsC,OAC3CF,QAAS,kBACPvB,EAAU,GAAAhB,OAAAM,OAAAoC,EAAA,EAAApC,CAAKS,GAAL,CAAcZ,EAAcY,EAAQ0B,aAHlD,cAQAhB,EAAAC,EAAAC,cAAA,UACEa,SAA6B,IAAnBzB,EAAQ0B,OAClBF,QAAS,kBAAMvB,EAAWD,EAAQ4B,MAAM,EAAG5B,EAAQ0B,OAAS,MAF9D,kBAOFhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,OAAO,QACP9B,QAASA,EACTd,QAASA,EACT6C,MAAM,QACNC,cAhEN,SAAuBhD,EAAQiD,EAAc7B,GAC3CC,EAAS,CACPe,KAAM,QACNpC,SACAkD,eAAgBD,EAAaE,KAC7BZ,qBAAsB,CAAEa,EAAGhC,EAAMiC,QAASC,EAAGlC,EAAMmC,WAErD9B,EAAW1B,EAAsBC,KA0D7BwD,UAxDN,SAAmBC,GACjBpC,EAAS,CACPe,KAAM,UACNqB,kBAEFhC,EAAW,UAyDf,IAAMiC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOpC,EAAAC,EAAAC,cAACzB,EAAD,MAASuD","file":"static/js/main.92b20566.chunk.js","sourcesContent":["export default [\r\n    {\r\n      id: 1,\r\n      city: 'Singapore',\r\n      color: 'red',\r\n      coordinates: [1.3521, 103.8198],\r\n      value: 50,\r\n    },\r\n    {\r\n      id: 2,\r\n      city: 'New York',\r\n      color: 'blue',\r\n      coordinates: [40.73061, -73.935242],\r\n      value: 25,\r\n    },\r\n    {\r\n      id: 3,\r\n      city: 'San Francisco',\r\n      color: 'orange',\r\n      coordinates: [37.773972, -122.431297],\r\n      value: 35,\r\n    },\r\n    {\r\n      id: 4,\r\n      city: 'Beijing',\r\n      color: 'gold',\r\n      coordinates: [39.9042, 116.4074],\r\n      value: 0,\r\n    },\r\n    {\r\n      id: 5,\r\n      city: 'London',\r\n      color: 'green',\r\n      coordinates: [51.5074, 0.1278],\r\n      value: 80,\r\n    },\r\n  ];\r\n  ","// export { default } from './lib';\n\n// export * from './lib';\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactGlobe from \"react-globe\";\n\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\n\nimport defaultMarkers from \"./markers\";\n\nfunction markerTooltipRenderer(marker) {\n  return `CITY: ${marker.city} (Value: ${marker.value})`;\n}\n\nconst options = {\n  markerTooltipRenderer\n};\n\nfunction App() {\n  const randomMarkers = defaultMarkers.map((marker) => ({\n    ...marker,\n    value: Math.floor(Math.random() * 100)\n  }));\n  const [markers, setMarkers] = useState([]);\n  const [event, setEvent] = useState(null);\n  const [details, setDetails] = useState(null);\n  function onClickMarker(marker, markerObject, event) {\n    setEvent({\n      type: \"CLICK\",\n      marker,\n      markerObjectID: markerObject.uuid,\n      pointerEventPosition: { x: event.clientX, y: event.clientY }\n    });\n    setDetails(markerTooltipRenderer(marker));\n  }\n  function onDefocus(previousFocus) {\n    setEvent({\n      type: \"DEFOCUS\",\n      previousFocus\n    });\n    setDetails(null);\n  }\n\n  return (\n    <div>\n      {details && (\n        <div\n          style={{\n            background: \"white\",\n            position: \"absolute\",\n            fontSize: 20,\n            bottom: 0,\n            right: 0,\n            padding: 12\n          }}\n        >\n          <p>{details}</p>\n          <p>\n            EVENT: type={event.type}, position=\n            {JSON.stringify(event.pointerEventPosition)})\n          </p>\n        </div>\n      )}\n      <div style={{ padding: 32 }}>\n        <button onClick={() => setMarkers(randomMarkers)}>\n          Randomize markers\n        </button>\n        <button disabled={markers.length === 0} onClick={() => setMarkers([])}>\n          Clear markers\n        </button>\n        <button\n          disabled={markers.length === randomMarkers.length}\n          onClick={() =>\n            setMarkers([...markers, randomMarkers[markers.length]])\n          }\n        >\n          Add marker\n        </button>\n        <button\n          disabled={markers.length === 0}\n          onClick={() => setMarkers(markers.slice(0, markers.length - 1))}\n        >\n          Remove marker\n        </button>\n      </div>\n      <ReactGlobe\n        height=\"100vh\"\n        markers={markers}\n        options={options}\n        width=\"100vw\"\n        onClickMarker={onClickMarker}\n        onDefocus={onDefocus}\n      />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}